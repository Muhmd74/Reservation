// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservation.Infrastructure.Data.ApplicationDbContext;

namespace Reservation.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservation.Core.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CityName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4cd181b7-3e7a-4691-a8fa-3eba2a8a3f72"),
                            CityName = "Cairo",
                            Content = "Start and end in Cairo! With the In-depth Cultural tour King Ramses with Cruise - 13 days, you have a 13 days tour package taking you through Cairo, Egypt and 8 other destinations in Egypt. King Ramses with Cruise - 13 days includes accommodation in a hotel as well as an expert guide, meals, transport and more",
                            DateTime = new DateTime(2021, 8, 26, 5, 27, 45, 182, DateTimeKind.Local).AddTicks(8381),
                            ImageUrl = "",
                            Price = 456m,
                            Title = "King Ramses with Cruise - 13 days"
                        });
                });

            modelBuilder.Entity("Reservation.Core.Entities.TripUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("TripUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af1fd978-e084-4152-8880-87d3787e6c7e"),
                            TripId = new Guid("4cd181b7-3e7a-4691-a8fa-3eba2a8a3f72"),
                            UserId = new Guid("e245d563-07b6-46c7-8a36-346e11144376")
                        },
                        new
                        {
                            Id = new Guid("59ee1642-34be-45ec-a4ac-616143ae703c"),
                            TripId = new Guid("4cd181b7-3e7a-4691-a8fa-3eba2a8a3f72"),
                            UserId = new Guid("7d0f809a-7e7d-4d62-8923-85011cdc7046")
                        });
                });

            modelBuilder.Entity("Reservation.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e755d563-07b6-46c7-8a36-346e11144622"),
                            Address = "Cairo",
                            Email = "admin",
                            IsActive = true,
                            Name = "Admin",
                            Password = "admin",
                            Phone = "01093356547",
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("e245d563-07b6-46c7-8a36-346e11144376"),
                            Address = "Cairo",
                            Email = "Ahmed43@Icloud.com",
                            IsActive = true,
                            Name = "Admin",
                            Password = "Ahmed43@Icloud.com",
                            Phone = "01022453576",
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("7d0f809a-7e7d-4d62-8923-85011cdc7046"),
                            Address = "Aswan",
                            Email = "mohamed32@yahoo.com",
                            IsActive = true,
                            Name = "Mohamed Ali",
                            Password = "mohamed32@yahoo.com",
                            Phone = "01012489087",
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("1b26ba12-efd3-4cd0-bf45-2214dcba840b"),
                            Address = "Alexandria",
                            Email = "Mazen12@Yahoo.com",
                            IsActive = true,
                            Name = "Admin",
                            Password = "Mazen12@Yahoo.com",
                            Phone = "01093355434",
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("e86a2575-8dd3-4ab6-97ce-749aa4da6629"),
                            Address = "Giza",
                            Email = "Ali55@Icloud.com",
                            IsActive = true,
                            Name = "Admin",
                            Password = "Ali55@Icloud.com",
                            Phone = "01094242323",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("Reservation.Core.Entities.TripUser", b =>
                {
                    b.HasOne("Reservation.Core.Entities.Trip", "Trip")
                        .WithMany("TripUsers")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Reservation.Core.Entities.User", "User")
                        .WithMany("TripUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Reservation.Core.Entities.Trip", b =>
                {
                    b.Navigation("TripUsers");
                });

            modelBuilder.Entity("Reservation.Core.Entities.User", b =>
                {
                    b.Navigation("TripUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
